{"ast":null,"code":"var _jsxFileName = \"/Users/a9886177/Desktop/codeclan_work/week_09/project_iou/iou_app_frontend/src/components/MainPage/Dropdowns/AddNewTask.js\";\nimport React from 'react';\n\nconst AddNewTask = props => {\n  const handleNewTask = evt => {\n    props.updateNewTaskButton('none');\n    props.updateNewTaskForm('showForm');\n  };\n\n  const handleNewTaskSubmit = evt => {\n    evt.preventDefault();\n    let newTask = evt.target.inlineFormInputName.value;\n    console.log(props.state.errorMessage);\n\n    if (newTask.length >= 20) {\n      props.updateErrorMessage('Task cannnot be longer than 20 characters');\n    } else {\n      props.object.createNewTask(newTask);\n      props.updateNewTaskButton('showButton');\n      props.updateNewTaskForm('none');\n    }\n  };\n\n  const newTaskForm = () => {\n    if (props.state.newTaskForm === 'showForm') {\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        className: \"new-task-form\",\n        onSubmit: evt => {\n          handleNewTaskSubmit(evt);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"inlineFormInputName\",\n        placeholder: \"Babysitting\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        id: \"submitbutt\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"div\", {\n        id: \"invalidInput\",\n        className: \"invalidInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, props.state.errorMessage));\n    }\n  };\n\n  const newTaskButton = () => {\n    if (props.state.newTaskButton === 'showButton') {\n      return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n        onClick: evt => {\n          handleNewTask(evt);\n        },\n        id: \"submitbutt\",\n        type: \"button\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Add Task\"));\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"new-task-head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Is the task you performed not listed? Add it here:\"), React.createElement(\"div\", {\n    className: \"button-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, newTaskButton()), newTaskForm());\n};\n\nexport default AddNewTask;","map":{"version":3,"sources":["/Users/a9886177/Desktop/codeclan_work/week_09/project_iou/iou_app_frontend/src/components/MainPage/Dropdowns/AddNewTask.js"],"names":["React","AddNewTask","props","handleNewTask","evt","updateNewTaskButton","updateNewTaskForm","handleNewTaskSubmit","preventDefault","newTask","target","inlineFormInputName","value","console","log","state","errorMessage","length","updateErrorMessage","object","createNewTask","newTaskForm","newTaskButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE5B,QAAMC,aAAa,GAAIC,GAAD,IAAS;AAC7BF,IAAAA,KAAK,CAACG,mBAAN,CAA0B,MAA1B;AACAH,IAAAA,KAAK,CAACI,iBAAN,CAAwB,UAAxB;AACD,GAHD;;AAIA,QAAMC,mBAAmB,GAAIH,GAAD,IAAS;AACnCA,IAAAA,GAAG,CAACI,cAAJ;AACA,QAAIC,OAAO,GAAGL,GAAG,CAACM,MAAJ,CAAWC,mBAAX,CAA+BC,KAA7C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,KAAN,CAAYC,YAAxB;;AACA,QAAIP,OAAO,CAACQ,MAAR,IAAkB,EAAtB,EAA0B;AACxBf,MAAAA,KAAK,CAACgB,kBAAN,CAAyB,2CAAzB;AACD,KAFD,MAEO;AACLhB,MAAAA,KAAK,CAACiB,MAAN,CAAaC,aAAb,CAA2BX,OAA3B;AACAP,MAAAA,KAAK,CAACG,mBAAN,CAA0B,YAA1B;AACAH,MAAAA,KAAK,CAACI,iBAAN,CAAwB,MAAxB;AACD;AACF,GAXD;;AAaA,QAAMe,WAAW,GAAG,MAAM;AACxB,QAAInB,KAAK,CAACa,KAAN,CAAYM,WAAZ,KAA4B,UAAhC,EAA4C;AAC1C,aACE,0CACE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAgC,QAAA,QAAQ,EAAGjB,GAAD,IAAS;AAACG,UAAAA,mBAAmB,CAACH,GAAD,CAAnB;AAAyB,SAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,EAAE,EAAC,qBAA/C;AAAqE,QAAA,WAAW,EAAC,aAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,EAAE,EAAC,YAAzB;AAAsC,QAAA,SAAS,EAAC,iBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF,EAKE;AAAK,QAAA,EAAE,EAAC,cAAR;AAAuB,QAAA,SAAS,EAAC,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiDF,KAAK,CAACa,KAAN,CAAYC,YAA7D,CALF,CADF;AASD;AACF,GAZD;;AAaA,QAAMM,aAAa,GAAG,MAAM;AAC1B,QAAIpB,KAAK,CAACa,KAAN,CAAYO,aAAZ,KAA8B,YAAlC,EAAgD;AAC9C,aACE,0CACA;AAAQ,QAAA,OAAO,EAAKlB,GAAD,IAAS;AAACD,UAAAA,aAAa,CAACC,GAAD,CAAb;AAAmB,SAAhD;AAAkD,QAAA,EAAE,EAAC,YAArD;AAAkE,QAAA,IAAI,EAAC,QAAvE;AAAgF,QAAA,SAAS,EAAC,iBAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,CADF;AAKD;AACF,GARD;;AAUA,SACE,0CACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DADF,EAEE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGkB,aAAa,EADhB,CAFF,EAKGD,WAAW,EALd,CADF;AASD,CAnDD;;AAqDA,eAAepB,UAAf","sourcesContent":["import React from 'react'\n\nconst AddNewTask = (props) => {\n\n  const handleNewTask = (evt) => {\n    props.updateNewTaskButton('none')\n    props.updateNewTaskForm('showForm')\n  }\n  const handleNewTaskSubmit = (evt) => {\n    evt.preventDefault()\n    let newTask = evt.target.inlineFormInputName.value;\n    console.log(props.state.errorMessage);\n    if (newTask.length >= 20) {\n      props.updateErrorMessage('Task cannnot be longer than 20 characters')\n    } else {\n      props.object.createNewTask(newTask)\n      props.updateNewTaskButton('showButton')\n      props.updateNewTaskForm('none')\n    }\n  }\n\n  const newTaskForm = () => {\n    if (props.state.newTaskForm === 'showForm') {\n      return (\n        <>\n          <form className=\"new-task-form\" onSubmit={(evt) => {handleNewTaskSubmit(evt)}}>\n            <input type=\"text\" className=\"form-control\" id=\"inlineFormInputName\" placeholder=\"Babysitting\"/>\n            <button type=\"submit\" id='submitbutt' className=\"btn btn-primary\">Submit</button>\n          </form>\n          <div id='invalidInput' className=\"invalidInput\">{props.state.errorMessage}</div>\n        </>\n      )\n    }\n  }\n  const newTaskButton = () => {\n    if (props.state.newTaskButton === 'showButton') {\n      return(\n        <>\n        <button onClick = {(evt) => {handleNewTask(evt)}} id='submitbutt' type=\"button\" className=\"btn btn-primary\">Add Task</button>\n        </>\n      )\n    }\n  }\n\n  return (\n    <>\n      <div className='new-task-head'>Is the task you performed not listed? Add it here:</div>\n      <div className='button-container'>\n        {newTaskButton()}\n      </div>\n      {newTaskForm()}\n    </>\n  )\n}\n\nexport default AddNewTask\n"]},"metadata":{},"sourceType":"module"}